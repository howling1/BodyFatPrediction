{"columns": ["params"], "data": [["{'experiment_name': 'age_prediction_5k', 'batch_size': 32, 'epochs': 2000, 'learning_rate': 0.005, 'weight_decay': 0.01, 'task': 'regression', 'print_every_n': 200, 'validate_every_n': 200}"], ["{'gnn_conv': <class 'torch_geometric.nn.conv.sage_conv.SAGEConv'>, 'in_features': 3, 'encoder_channels': [], 'conv_channels': [32, 128], 'decoder_channels': [32, 8], 'num_classes': 1, 'apply_dropedge': False, 'apply_bn': True, 'apply_dropout': True}"], ["MeshProcessingNetwork(\n  (gnn): GraphFeatureEncoder(\n    (conv_layers): ModuleList(\n      (0): SAGEConv(3, 32, aggr=mean)\n      (1): SAGEConv(32, 128, aggr=mean)\n    )\n    (bn_layers): ModuleList(\n      (0): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n  )\n  (final_projection): Sequential(\n    (0): Linear(in_features=128, out_features=32, bias=True)\n    (1): ReLU()\n    (2): Dropout(p=0.5, inplace=False)\n    (3): Linear(in_features=32, out_features=8, bias=True)\n    (4): ReLU()\n    (5): Dropout(p=0.5, inplace=False)\n    (6): Linear(in_features=8, out_features=1, bias=True)\n    (7): Identity()\n  )\n)"]]}