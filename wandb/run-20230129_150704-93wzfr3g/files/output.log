current GPU: NVIDIA A40
using GPU: 3
Traceback (most recent call last):
  File "training.py", line 217, in <module>
    main()
  File "training.py", line 197, in main
    model = DenseGNN(**model_params).to(device)
  File "/data2/practical-wise2223/MeshBody/BodyMeshGNN/model.py", line 434, in __init__
    else [nn.BatchNorm1d(math.pow(2, i) * inout_conv_channel) for i in range(num_layers)]
  File "/data2/practical-wise2223/MeshBody/BodyMeshGNN/model.py", line 434, in <listcomp>
    else [nn.BatchNorm1d(math.pow(2, i) * inout_conv_channel) for i in range(num_layers)]
  File "/u/home/zhousiy/.conda/envs/BodyMeshGNN/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 133, in __init__
    super(_BatchNorm, self).__init__(
  File "/u/home/zhousiy/.conda/envs/BodyMeshGNN/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 48, in __init__
    self.weight = Parameter(torch.empty(num_features, **factory_kwargs))
TypeError: empty() received an invalid combination of arguments - got (float, dtype=NoneType, device=NoneType), but expected one of:
 * (tuple of ints size, *, tuple of names names, torch.memory_format memory_format, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)
 * (tuple of SymInts size, *, torch.memory_format memory_format, Tensor out, torch.dtype dtype, torch.layout layout, torch.device device, bool pin_memory, bool requires_grad)